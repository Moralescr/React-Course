{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catego","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","url1","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAM,OAAKP,GAAL,mBAAoBO,OACxCN,EAAc,MAKlB,SACE,uBACGO,KAAO,OACPC,MAAST,EACTU,SAlBiB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCIhBG,EAVK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAE9B,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,Q,uBCPJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEJ,mCACTC,EAHa,iDAGoCC,UAAUH,GAH9C,6BAEJ,oCAFI,SAKAI,MAAMF,GALN,cAKbG,EALa,gBAMKA,EAAKC,OANV,uBAMXC,EANW,EAMXA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHjB,GAAIiB,EAAIjB,GACRC,MAAOgB,EAAIhB,MACXC,IAAKe,EAAIC,OAAOC,iBAAiBjB,QAbtB,kBAiBZa,GAjBY,4CAAH,sDCIPK,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAGrB,ECJwB,SAAEA,GAE1B,MAA0BrB,mBAAS,CAC/B4B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAdAC,qBAAU,WAGPlB,EAAQC,GACNkB,MAAK,SAAAC,GAEFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAIlB,CAACd,IAEGe,EDlBwBK,CAAcpB,GAAjCW,EAAZ,EAAOJ,KAAaO,EAApB,EAAoBA,QAIpB,OACI,qCACI,oBAAIlB,UAAU,oCAAd,SAAmDI,IAEjDc,GAAW,mBAAGlB,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGIe,EAAOF,KAAK,SAAEC,GAAF,OACR,cAAC,EAAD,eAESA,GADGA,EAAIjB,aElBvB4B,EAAe,WAExB,MAAoC1C,mBAAS,CAAC,WAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEQ4C,EAAWb,KAAM,SAAAT,GAAQ,OACjB,cAAC,EAAD,CAEIA,SAAWA,GADHA,Y,MCZxCuB,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f9ed8e3a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ( {setCategories} ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            setCategories(catego => [inputValue, ...catego, ]);\n            setInputValue('');\n        }\n    }\n\n    return (  \n        <form onSubmit = {handleSubmit}>\n          <input\n             type = \"text\"\n             value = {inputValue}\n             onChange = {handleInputChange}\n          />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","import React from 'react'\n\nconst GifGridItem = ( {id, title, url} ) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n","export const getGifs = async (category) => {\n\n    const apiKey = '7OCSJVhkN01ZLCaCAwaMxN9U4fwXVbiP';\n    const url1 = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`;\n\n    const resp = await fetch(url1); //Realiza petición\n    const { data }  = await resp.json(); //Recupera la data\n    \n\n    const gifs = data.map( img => {     \n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    })\n   \n    return gifs;\n}","import React from 'react'\nimport GifGridItem from './GifGridItem';\nimport {useFetchGifs} from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({category}) => {\n\n    //Obtiene las imagenes de la búsqueda\n    const {data:images, loading} = useFetchGifs( category ); //Data:images se usa para renombrar el parámetro\n\n\n    //Muestra los resultados de la búsqueda\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">loading</p> }\n\n            <div className=\"card-grid\">\n            \n            {\n                images.map( ( img ) => (\n                    <GifGridItem \n                        key = { img.id } \n                        { ...img } \n                    />\n                ))\n            }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid;\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    //Se usa para que se haga la petición una sola vez solo si la categoria no cambia\n    useEffect(() => {\n\n       //Obtiene las imagenes\n       getGifs(category)\n        .then(imgs => { //Si es exitoso actualiza el estado\n            \n            setState({\n                data: imgs,\n                loading: false \n                })       \n        });\n\n    }, [category]);\n\n    return state;\n}\n  \n","import React, {useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Naruto']);\n \n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories = { setCategories }/> \n            <hr></hr>\n\n            <ol>\n                {\n                    categories.map ( category => (\n                            <GifGrid \n                                key = { category }\n                                category={ category }\n                            />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}